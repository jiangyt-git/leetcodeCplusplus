/*
给定一个包含红色、白色和蓝色，一共 n 个元素的数组，原地对它们进行排序，使得相同颜色的元素相邻，并按照红色、白色、蓝色顺序排列。
此题中，我们使用整数 0、 1 和 2 分别表示红色、白色和蓝色。
输入：nums = [2,0,2,1,1,0]
输出：[0,0,1,1,2,2]
输入：nums = [0]
输出：[0]
[][][]
思路：三路快排
0(<)   l:-1  [0, l]  小于target的值
1(=)   m:i   [l, i)  等于target的值
2(>)   r:length   [r, length-1] 等于target的值
两个指针：
  0     1       2
[0, l)[l, i],[r, length)
*/
class Solution {
public:
    class Solution {
public:
    void sortColors(vector<int>& nums) {
        if (nums.size() < 2) {
          return ;
        }
        int l = -1;
        int r = nums.size();
        int i = 0;
        while (i < r) {
          if (nums[i] == 0) {
            l++;
            swap(nums, l, i);
            i++;
          } else if (nums[i] == 1) {
            i++;
          } else {
            r--;  
            swap(nums, r, i);
          }
        }
    }
    void swap (vector<int>& nums, int i, int j) {
      int tmp = nums[i];
      nums[i] = nums[j];
      nums[j] = tmp;
    }
};
};
